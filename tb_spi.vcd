$date
	Mon Mar 18 10:33:54 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_spi $end
$var wire 1 ! sready $end
$var wire 1 " sdone $end
$var wire 8 # sdata_out [7:0] $end
$var wire 1 $ sclk $end
$var wire 1 % mready $end
$var wire 1 & mosi $end
$var wire 1 ' miso $end
$var wire 1 ( mdone $end
$var wire 8 ) mdata_out [7:0] $end
$var wire 1 * cs $end
$var reg 1 + clk $end
$var reg 8 , mdata_in [7:0] $end
$var reg 1 - mload $end
$var reg 1 . reset $end
$var reg 8 / sdata_in [7:0] $end
$var reg 1 0 sload $end
$scope module spm $end
$var wire 1 + clk $end
$var wire 8 1 data_in [7:0] $end
$var wire 1 - load $end
$var wire 1 . reset $end
$var wire 1 ' miso $end
$var reg 3 2 bit_counter [2:0] $end
$var reg 1 3 clk_divider $end
$var reg 1 * cs $end
$var reg 8 4 data_out [7:0] $end
$var reg 1 ( done $end
$var reg 1 5 load_reg $end
$var reg 1 & mosi $end
$var reg 1 % ready $end
$var reg 1 $ sclk $end
$var reg 8 6 shift_reg [7:0] $end
$upscope $end
$scope module sps $end
$var wire 1 * cs $end
$var wire 8 7 data_in [7:0] $end
$var wire 1 0 load $end
$var wire 1 & mosi $end
$var wire 1 . reset $end
$var wire 1 $ sclk $end
$var reg 3 8 bit_count [2:0] $end
$var reg 8 9 data_out [7:0] $end
$var reg 1 " done $end
$var reg 1 : load_reg $end
$var reg 1 ' miso $end
$var reg 1 ! ready $end
$var reg 8 ; shift_reg_in [7:0] $end
$var reg 8 < shift_reg_out [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 <
b0 ;
0:
b0 9
b0 8
b0 7
bx 6
x5
bx 4
x3
bx 2
b0 1
00
b0 /
1.
0-
b0 ,
x+
x*
bx )
x(
0'
x&
x%
x$
b0 #
0"
0!
$end
#1
0+
#2
03
05
b0 2
0%
0(
1*
1+
#3
0+
#4
0$
1+
#5
0+
#6
1+
#7
0+
#8
1+
#9
0+
#10
13
1+
0.
#11
0+
b10101010 ,
b10101010 1
1-
#12
15
b111 2
0*
b10101010 6
03
1$
1+
#13
0+
0-
#14
13
0$
1+
#15
0+
#16
b110 2
b1010100 6
1&
03
1$
1+
#17
0+
#18
13
0$
1+
#19
0+
#20
b101 2
b10101000 6
0&
03
1$
1+
#21
0+
#22
13
0$
1+
#23
0+
#24
b100 2
b1010000 6
1&
03
1$
1+
#25
0+
#26
13
0$
1+
#27
0+
#28
b11 2
b10100000 6
0&
03
1$
1+
#29
0+
#30
13
0$
1+
#31
0+
#32
b10 2
b1000000 6
1&
03
1$
1+
#33
0+
b11001100 ,
b11001100 1
1-
#34
13
0$
1+
#35
0+
0-
#36
b1 2
b10000000 6
0&
03
1$
1+
#37
0+
#38
13
0$
1+
#39
0+
#40
b0 2
b0 6
1&
03
1$
1+
#41
0+
#42
13
0$
1+
#43
0+
#44
05
1(
1*
0&
03
1$
1+
#45
0+
#46
13
0$
1+
#47
0+
#48
03
1$
1+
#49
0+
#50
13
0$
1+
#51
0+
#52
03
1$
1+
#53
0+
#54
13
0$
1+
#55
0+
b11110000 /
b11110000 7
10
#56
03
1$
1+
#57
0+
00
#58
13
0$
1+
#59
0+
#60
03
1$
1+
#61
0+
#62
13
0$
1+
#63
0+
#64
03
1$
1+
#65
0+
#66
13
0$
1+
#67
0+
#68
03
1$
1+
#69
0+
#70
13
0$
1+
#71
0+
#72
03
1$
1+
#73
0+
#74
13
0$
1+
#75
0+
#76
03
1$
1+
#77
0+
b1111 /
b1111 7
10
#78
13
0$
1+
#79
0+
00
#80
03
1$
1+
#81
0+
#82
13
0$
1+
#83
0+
#84
03
1$
1+
#85
0+
#86
13
0$
1+
#87
0+
#88
03
1$
1+
#89
0+
#90
13
0$
1+
#91
0+
#92
03
1$
1+
#93
0+
#94
13
0$
1+
#95
0+
#96
03
1$
1+
#97
0+
#98
13
0$
1+
#99
0+
